<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Generated by JAX-WS RI (http://jax-ws.java.net). RI's version is JAX-WS RI 2.2.9-b130926.1035 svn-revision#5f6196f2b90e9460065a4c2f4e30e065b245e51e. -->
<definitions targetNamespace="http://ws.v1.api.already.reqs.com.br/" name="ProdutoWSService" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:tns="http://ws.v1.api.already.reqs.com.br/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata">
  <types>
    <xs:schema version="1.0" targetNamespace="http://ws.v1.api.already.reqs.com.br/" xmlns:xs="http://www.w3.org/2001/XMLSchema">

      <xs:element name="AuthorizationFault" nillable="true" type="xs:string"/>

      <xs:element name="atualizarProduto" type="tns:atualizarProduto"/>

      <xs:element name="atualizarProdutoResponse" type="tns:atualizarProdutoResponse"/>

      <xs:element name="criarProduto" type="tns:criarProduto"/>

      <xs:element name="criarProdutoResponse" type="tns:criarProdutoResponse"/>

      <xs:element name="getProdutoById" type="tns:getProdutoById"/>

      <xs:element name="getProdutoByIdResponse" type="tns:getProdutoByIdResponse"/>

      <xs:element name="getProdutos" type="tns:getProdutos"/>

      <xs:element name="getProdutosResponse" type="tns:getProdutosResponse"/>

      <xs:element name="listaProdutoDTO" type="tns:listaProdutoDTO"/>

      <xs:element name="produtoDTO" type="tns:produtoDTO"/>

      <xs:element name="removerProduto" type="tns:removerProduto"/>

      <xs:element name="removerProdutoResponse" type="tns:removerProdutoResponse"/>

      <xs:element name="token" nillable="true" type="tns:token"/>

      <xs:complexType name="removerProduto">
        <xs:sequence>
          <xs:element name="id" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="token">
        <xs:sequence>
          <xs:element name="token" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="removerProdutoResponse">
        <xs:sequence/>
      </xs:complexType>

      <xs:complexType name="getProdutos">
        <xs:sequence>
          <xs:element name="paginacao" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getProdutosResponse">
        <xs:sequence>
          <xs:element name="produtos" type="tns:listaProdutoDTO" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="listaProdutoDTO">
        <xs:sequence>
          <xs:element name="produto" type="tns:produtoDTO" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="produtoDTO">
        <xs:sequence>
          <xs:element name="id" type="xs:long"/>
          <xs:element name="nome" type="xs:string"/>
          <xs:element name="valor" type="xs:decimal"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="criarProduto">
        <xs:sequence>
          <xs:element name="produto" type="tns:produtoDTO"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="criarProdutoResponse">
        <xs:sequence/>
      </xs:complexType>

      <xs:complexType name="atualizarProduto">
        <xs:sequence>
          <xs:element name="produto" type="tns:produtoDTO"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="atualizarProdutoResponse">
        <xs:sequence/>
      </xs:complexType>

      <xs:complexType name="getProdutoById">
        <xs:sequence>
          <xs:element name="id" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getProdutoByIdResponse">
        <xs:sequence>
          <xs:element name="produto" type="tns:produtoDTO" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
</xs:schema>
  </types>
  <message name="getProdutoById">
    <part name="parameters" element="tns:getProdutoById"/>
    <part name="token" element="tns:token"/>
  </message>
  <message name="getProdutoByIdResponse">
    <part name="result" element="tns:getProdutoByIdResponse"/>
  </message>
  <message name="AuthorizationException">
    <part name="fault" element="tns:AuthorizationFault"/>
  </message>
  <message name="atualizarProduto">
    <part name="parameters" element="tns:atualizarProduto"/>
    <part name="token" element="tns:token"/>
  </message>
  <message name="atualizarProdutoResponse">
    <part name="result" element="tns:atualizarProdutoResponse"/>
  </message>
  <message name="removerProduto">
    <part name="parameters" element="tns:removerProduto"/>
    <part name="token" element="tns:token"/>
  </message>
  <message name="removerProdutoResponse">
    <part name="result" element="tns:removerProdutoResponse"/>
  </message>
  <message name="getProdutos">
    <part name="parameters" element="tns:getProdutos"/>
    <part name="token" element="tns:token"/>
  </message>
  <message name="getProdutosResponse">
    <part name="result" element="tns:getProdutosResponse"/>
  </message>
  <message name="criarProduto">
    <part name="parameters" element="tns:criarProduto"/>
    <part name="token" element="tns:token"/>
  </message>
  <message name="criarProdutoResponse">
    <part name="result" element="tns:criarProdutoResponse"/>
  </message>
  <portType name="ProdutoWS">
    <operation name="getProdutoById" parameterOrder="parameters token">
      <input wsam:Action="http://ws.v1.api.already.reqs.com.br/ProdutoWS/getProdutoByIdRequest" message="tns:getProdutoById"/>
      <output wsam:Action="http://ws.v1.api.already.reqs.com.br/ProdutoWS/getProdutoByIdResponse" message="tns:getProdutoByIdResponse"/>
      <fault message="tns:AuthorizationException" name="AuthorizationException" wsam:Action="http://ws.v1.api.already.reqs.com.br/ProdutoWS/getProdutoById/Fault/AuthorizationException"/>
    </operation>
    <operation name="atualizarProduto" parameterOrder="parameters token">
      <input wsam:Action="http://ws.v1.api.already.reqs.com.br/ProdutoWS/atualizarProdutoRequest" message="tns:atualizarProduto"/>
      <output wsam:Action="http://ws.v1.api.already.reqs.com.br/ProdutoWS/atualizarProdutoResponse" message="tns:atualizarProdutoResponse"/>
      <fault message="tns:AuthorizationException" name="AuthorizationException" wsam:Action="http://ws.v1.api.already.reqs.com.br/ProdutoWS/atualizarProduto/Fault/AuthorizationException"/>
    </operation>
    <operation name="removerProduto" parameterOrder="parameters token">
      <input wsam:Action="http://ws.v1.api.already.reqs.com.br/ProdutoWS/removerProdutoRequest" message="tns:removerProduto"/>
      <output wsam:Action="http://ws.v1.api.already.reqs.com.br/ProdutoWS/removerProdutoResponse" message="tns:removerProdutoResponse"/>
      <fault message="tns:AuthorizationException" name="AuthorizationException" wsam:Action="http://ws.v1.api.already.reqs.com.br/ProdutoWS/removerProduto/Fault/AuthorizationException"/>
    </operation>
    <operation name="getProdutos" parameterOrder="parameters token">
      <input wsam:Action="http://ws.v1.api.already.reqs.com.br/ProdutoWS/getProdutosRequest" message="tns:getProdutos"/>
      <output wsam:Action="http://ws.v1.api.already.reqs.com.br/ProdutoWS/getProdutosResponse" message="tns:getProdutosResponse"/>
      <fault message="tns:AuthorizationException" name="AuthorizationException" wsam:Action="http://ws.v1.api.already.reqs.com.br/ProdutoWS/getProdutos/Fault/AuthorizationException"/>
    </operation>
    <operation name="criarProduto" parameterOrder="parameters token">
      <input wsam:Action="http://ws.v1.api.already.reqs.com.br/ProdutoWS/criarProdutoRequest" message="tns:criarProduto"/>
      <output wsam:Action="http://ws.v1.api.already.reqs.com.br/ProdutoWS/criarProdutoResponse" message="tns:criarProdutoResponse"/>
      <fault message="tns:AuthorizationException" name="AuthorizationException" wsam:Action="http://ws.v1.api.already.reqs.com.br/ProdutoWS/criarProduto/Fault/AuthorizationException"/>
    </operation>
  </portType>
  <binding name="ProdutoWSPortBinding" type="tns:ProdutoWS">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <operation name="getProdutoById">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal" parts="parameters"/>
        <soap:header message="tns:getProdutoById" part="token" use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="AuthorizationException">
        <soap:fault name="AuthorizationException" use="literal"/>
      </fault>
    </operation>
    <operation name="atualizarProduto">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal" parts="parameters"/>
        <soap:header message="tns:atualizarProduto" part="token" use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="AuthorizationException">
        <soap:fault name="AuthorizationException" use="literal"/>
      </fault>
    </operation>
    <operation name="removerProduto">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal" parts="parameters"/>
        <soap:header message="tns:removerProduto" part="token" use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="AuthorizationException">
        <soap:fault name="AuthorizationException" use="literal"/>
      </fault>
    </operation>
    <operation name="getProdutos">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal" parts="parameters"/>
        <soap:header message="tns:getProdutos" part="token" use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="AuthorizationException">
        <soap:fault name="AuthorizationException" use="literal"/>
      </fault>
    </operation>
    <operation name="criarProduto">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal" parts="parameters"/>
        <soap:header message="tns:criarProduto" part="token" use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="AuthorizationException">
        <soap:fault name="AuthorizationException" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="ProdutoWSService">
    <port name="ProdutoWSPort" binding="tns:ProdutoWSPortBinding">
      <soap:address location="REPLACE_WITH_ACTUAL_URL"/>
    </port>
  </service>
</definitions>

